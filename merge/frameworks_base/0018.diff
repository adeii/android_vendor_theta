From: ChepKun <ProgrammerKun@gmail.com>
Subject: frameworks/base (0018): add qcom modem shutdown process

diff --git a/services/java/com/android/server/power/ShutdownThread.java b/services/java/com/android/server/power/ShutdownThread.java
index fd54c01..2e4b719 100644
--- a/services/java/com/android/server/power/ShutdownThread.java
+++ b/services/java/com/android/server/power/ShutdownThread.java
@@ -56,10 +56,12 @@ import com.android.internal.telephony.msim.ITelephonyMSim;
 import android.util.Log;
 import android.view.WindowManager;
 import android.view.KeyEvent;
+import java.io.FileInputStream;
 
 public final class ShutdownThread extends Thread {
     // constants
     private static final String TAG = "ShutdownThread";
+    private static final int MAX_NUM_PHONE_STATE_READS = 16;
     private static final int PHONE_STATE_POLL_SLEEP_MSEC = 500;
     // maximum time we wait for the shutdown broadcast before going on.
     private static final int MAX_BROADCAST_TIME = 10*1000;
@@ -79,10 +81,14 @@ public final class ShutdownThread extends Thread {
 
     // Provides shutdown assurance in case the system_server is killed
     public static final String SHUTDOWN_ACTION_PROPERTY = "sys.shutdown.requested";
+    public static final String RADIO_SHUTDOWN_PROPERTY = "sys.radio.shutdown";
 
     // Indicates whether we are rebooting into safe mode
     public static final String REBOOT_SAFEMODE_PROPERTY = "persist.sys.safemode";
 
+    private static final String SYSFS_MSM_EFS_SYNC_COMPLETE = "/sys/devices/platform/rs300000a7.65536/sync_sts";
+    private static final String SYSFS_MDM_EFS_SYNC_COMPLETE = "/sys/devices/platform/rs300100a7.65536/sync_sts";
+
     // static instance of this thread
     private static final ShutdownThread sInstance = new ShutdownThread();
     
@@ -362,6 +368,7 @@ public final class ShutdownThread extends Thread {
      * Shuts off power regardless of radio and bluetooth state if the alloted time has passed.
      */
     public void run() {
+	boolean msmEfsSyncDone = false, mdmEfsSyncDone = false;
         /*
          * Write a system property in case the system_server reboots before we
          * get to the actual hardware restart. If that happens, we'll retry at
@@ -383,6 +390,47 @@ public final class ShutdownThread extends Thread {
         shutdownRadios(MAX_RADIO_WAIT_TIME);
         Log.i(TAG, "Sending shutdown broadcast...");
 
+		SystemProperties.set(RADIO_SHUTDOWN_PROPERTY, "true");
+			        Log.i(TAG, "Waiting for radio file system sync to complete ...");
+
+			        // Wait a max of 8 seconds
+			        for (int i = 0; i < MAX_NUM_PHONE_STATE_READS; i++) {
+			            if (!msmEfsSyncDone) {
+			                try {
+			                    FileInputStream fis = new FileInputStream(SYSFS_MSM_EFS_SYNC_COMPLETE);
+			                    int result = fis.read();
+			                    fis.close();
+			                    if (result == '1')
+			                                        {
+			                        msmEfsSyncDone = true;
+			                                        }
+			                } catch (Exception ex) {
+			                    Log.e(TAG, "Exception during msmEfsSyncDone", ex);
+			                    msmEfsSyncDone = true;
+			                }
+			            }
+			            if (!mdmEfsSyncDone) {
+			                try {
+			                    FileInputStream fis = new FileInputStream(SYSFS_MDM_EFS_SYNC_COMPLETE);
+			                    int result = fis.read();
+			                    fis.close();
+			                    if (result == '1')
+			                                        {
+			                        mdmEfsSyncDone = true;
+			                                        }
+			                } catch (Exception ex) {
+			                    Log.e(TAG, "Exception during mdmEfsSyncDone", ex);
+			                    mdmEfsSyncDone = true;
+			                }
+			            }
+			            if (msmEfsSyncDone && mdmEfsSyncDone) {
+			                Log.i(TAG, "Radio file system sync complete.");
+			                break;
+			            }
+			            Log.i(TAG, "Radio file system sync incomplete - retry.");
+			            SystemClock.sleep(PHONE_STATE_POLL_SLEEP_MSEC);
+			        }
+
         // First send the high-level shut down broadcast.
         Intent intent = new Intent(Intent.ACTION_SHUTDOWN);
         intent.addFlags(Intent.FLAG_RECEIVER_FOREGROUND);
